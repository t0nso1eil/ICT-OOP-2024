// <auto-generated />
using System;
using MentallHealthSupport.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MentallHealthSupport.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240315081819_init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.PsychologistModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying")
                        .HasColumnName("psychologist_id");

                    b.Property<DateOnly>("ExperienceStartDate")
                        .HasColumnType("date")
                        .HasColumnName("experience_start_date");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("int")
                        .HasColumnName("experience_years");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("numeric")
                        .HasColumnName("price_per_hour");

                    b.Property<float>("Rate")
                        .HasColumnType("numeric")
                        .HasColumnName("rate");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("specialization");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("Id")
                        .HasName("psychologist_pkey");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("psychologist", (string)null);
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.ReviewModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying")
                        .HasColumnName("review_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PsychologistId")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("psychologist_id");

                    b.Property<int>("Rate")
                        .HasColumnType("int")
                        .HasColumnName("rate");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("review_pkey");

                    b.HasIndex("PsychologistId");

                    b.HasIndex("UserId");

                    b.ToTable("review", (string)null);
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.SessionModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying")
                        .HasColumnName("session_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("SpotId")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("spot_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("status");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("sessions_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("session", (string)null);
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.SpotModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying")
                        .HasColumnName("spot_id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<DateTime>("HourEnd")
                        .HasColumnType("time without timezone")
                        .HasColumnName("hour_end");

                    b.Property<DateTime>("HourStart")
                        .HasColumnType("time without timezone")
                        .HasColumnName("hour_start");

                    b.Property<string>("PsychologistId")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("spots_pkey");

                    b.HasIndex("PsychologistId");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("spot", (string)null);
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.UserModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying")
                        .HasColumnName("user_id");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additional_info");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsPsychologist")
                        .HasColumnType("boolean")
                        .HasColumnName("is_psychologist");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("phone_number");

                    b.Property<string>("PsychologistId")
                        .HasColumnType("character varying");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("registration_date");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("sex");

                    b.HasKey("Id")
                        .HasName("users_pkey");

                    b.HasIndex("PsychologistId");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.PsychologistModel", b =>
                {
                    b.HasOne("MentallHealthSupport.Infrastructure.Persistence.Models.UserModel", "User")
                        .WithOne()
                        .HasForeignKey("MentallHealthSupport.Infrastructure.Persistence.Models.PsychologistModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("psychologist_user_user_id_fk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.ReviewModel", b =>
                {
                    b.HasOne("MentallHealthSupport.Infrastructure.Persistence.Models.PsychologistModel", "Psychologist")
                        .WithMany("Reviews")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("review_psychologist_psychologist_id_fk");

                    b.HasOne("MentallHealthSupport.Infrastructure.Persistence.Models.UserModel", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("review_user_user_id_fk");

                    b.Navigation("Psychologist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.SessionModel", b =>
                {
                    b.HasOne("MentallHealthSupport.Infrastructure.Persistence.Models.UserModel", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("session_user_user_id_fk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.SpotModel", b =>
                {
                    b.HasOne("MentallHealthSupport.Infrastructure.Persistence.Models.PsychologistModel", "Psychologist")
                        .WithMany("Spots")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("spot_psychologist_psychologist_id_fk");

                    b.HasOne("MentallHealthSupport.Infrastructure.Persistence.Models.SessionModel", "Session")
                        .WithOne("Spot")
                        .HasForeignKey("MentallHealthSupport.Infrastructure.Persistence.Models.SpotModel", "SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("session_spot_spot_id_fk");

                    b.Navigation("Psychologist");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.UserModel", b =>
                {
                    b.HasOne("MentallHealthSupport.Infrastructure.Persistence.Models.PsychologistModel", "Psychologist")
                        .WithMany()
                        .HasForeignKey("PsychologistId");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.PsychologistModel", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Spots");
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.SessionModel", b =>
                {
                    b.Navigation("Spot")
                        .IsRequired();
                });

            modelBuilder.Entity("MentallHealthSupport.Infrastructure.Persistence.Models.UserModel", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
